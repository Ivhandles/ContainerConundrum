trigger: 
  branches:
    include:
      - "azure-pipelines"

variables: 
  ACR_NAME: 'ivoyantacr'
  ACR_RESOURCE_GROUP: 'Ivoyant-ACR'
  DOCKERFILE_PATH_UI: './cc-ui/Dockerfile'
  DOCKERFILE_PATH_API: './CC_api/Dockerfile'
  UI_APP_SERVICE_NAME: 'ccappui'
  API_APP_SERVICE_NAME: 'ccappapi'

stages:
  - stage: Build
    displayName: 'Build and Push Docker Images'
    jobs:
      - job: Build_UI
        displayName: 'Build UI Docker Image'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
          - task: Docker@2
            displayName: 'Build UI Docker Image'
            inputs:
              containerRegistry: 'acr-sevice-connection'
              repository: '$(ACR_NAME)/cc_ui'
              command: 'build'
              Dockerfile: '$(DOCKERFILE_PATH_UI)'
              tags: '$(Build.BuildId)'
          - task: Docker@2
            inputs:
              containerRegistry: 'acr-sevice-connection'
              repository: '$(ACR_NAME)/cc_ui'
              command: push
              Dockerfile: '$(DOCKERFILE_PATH_UI)'
              tags: '$(Build.BuildId)'
            displayName: Push UI Docker Image


      - job: Build_API
        displayName: 'Build API Docker Image'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
          - task: Docker@2
            displayName: 'Build API Docker Image'
            inputs:
              containerRegistry: 'acr-sevice-connection'
              repository: '$(ACR_NAME)/cc_api'
              command: 'build'
              Dockerfile: '$(DOCKERFILE_PATH_API)'
              tags: '$(Build.BuildId)'
          - task: Docker@2
            inputs:
              containerRegistry: 'acr-sevice-connection'
              repository: '$(ACR_NAME)/cc_api'
              command: push
              Dockerfile: '$(DOCKERFILE_PATH_API)'
              tags: '$(Build.BuildId)'
            displayName: Push API Docker Image


  - stage: Deploy
    displayName: 'Deploy to Azure App Service'
    dependsOn: Build
    jobs:
    - job: Deploy_UI
      displayName: 'Deploy UI to Azure App Service'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - script: |
            az login --service-principal -u $(AZURE_SERVICE_PRINCIPAL_ID) -p $(AZURE_SERVICE_PRINCIPAL_PASSWORD) --tenant $(AZURE_TENANT_ID)
            az acr login --name $(ACR_NAME)
            docker pull $(ACR_NAME).azurecr.io/cc_ui:$(Build.BuildId)
            # az webapp config container set --name $(UI_APP_SERVICE_NAME) --resource-group $(ACR_RESOURCE_GROUP) --docker-custom-image-name $(ACR_NAME).azurecr.io/cc_ui:$(Build.BuildId)
          displayName: 'Pull and Deploy UI Docker Image'

    - job: Deploy_API
      displayName: 'Deploy API to Azure App Service'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - script: |
            az login --service-principal -u $(AZURE_SERVICE_PRINCIPAL_ID) -p $(AZURE_SERVICE_PRINCIPAL_PASSWORD) --tenant $(AZURE_TENANT_ID)
            az acr login --name $(ACR_NAME)
            docker pull $(ACR_NAME).azurecr.io/cc_api:$(Build.BuildId)
            # az webapp config container set --name $(API_APP_SERVICE_NAME) --resource-group $(ACR_RESOURCE_GROUP) --docker-custom-image-name $(ACR_NAME).azurecr.io/cc_api:$(Build.BuildId)
          displayName: 'Pull and Deploy API Docker Image'